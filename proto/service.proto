syntax = "proto3";
package smkvs;

option go_package = "pkg/rpc";

message VoteRequest {
  int32 term = 1;
  int32 candidateId = 2;
  int32 lastLogIndex = 3;
  int32 lastLogTerm = 4;
}

message VoteResponse {
  int32 term = 1;
  bool voteGranted = 2;
}

message AppendEntriesRequest {
  int32 term = 1;
  int32 leaderId = 2;
  int32 prevLogIndex = 3;
  int32 prevLogTerm = 4;
  repeated LogEntry entries = 5;
  int32 leaderCommit = 6;
  repeated string allNodes = 7;
  string leaderTarget = 8;
}

message AppendEntriesResponse {
  int32 term = 1;
  bool success = 2;
}

message LogEntry {
  int32 Index = 1;
  int32 Term = 2;
  string Key = 3;
  int32 Action = 4; // 1->Set; 2->Delete
  string Value = 5;
}

message NodeRegisterRequest {
  int32 nodeId = 1;
  string connectionData = 2;
}

message NodeRegisterResponse {
  bool success = 1;
  string redirectTarget = 2;
}

service Node {
  rpc RequestVote (VoteRequest) returns (VoteResponse) {};
  rpc AppendEntries (AppendEntriesRequest) returns (AppendEntriesResponse) {};
  rpc RegisterNode (NodeRegisterRequest) returns (NodeRegisterResponse) {};
}